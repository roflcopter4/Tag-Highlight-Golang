Writing request 1 or 0.
======================================
[
    0
    0
    "nvim_call_function"
    [
        "serverstart"
        []
    ]
]
======================================
[
    1
    0
    NIL
    "/tmp/nvimmoAR6r/29"
]
Writing request 2 or 0.
======================================
[
    0
    1
    "nvim_get_var"
    [
        "tag_highlight#compression_type"
    ]
]
======================================
[
    1
    1
    NIL
    "lzma"
]
Writing request 3 or 0.
======================================
[
    0
    2
    "nvim_out_write"
    [
        "Compression type is 'lzma' -> 1
"
    ]
]
======================================
[
    1
    2
    NIL
    NIL
]
Writing request 4 or 0.
======================================
[
    0
    3
    "nvim_get_var"
    [
        "tag_highlight#compression_level"
    ]
]
======================================
[
    1
    3
    NIL
    9
]
Writing request 5 or 0.
======================================
[
    0
    4
    "nvim_get_var"
    [
        "tag_highlight#ctags_args"
    ]
]
======================================
[
    1
    4
    NIL
    [
        "--fields=+l"
        "--c-kinds=+px"
        "--c++-kinds=+px"
        "--sort=yes"
        "--exclude=".mypy_cache""
        "--regex-go="/^\s*(var)?\s*(\w*)\s*:?=\s*func/\2/f/""
        "--languages=-Pod"
        "--exclude="*Makefile""
        "--exclude="*Makefile.in""
        "--exclude="*aclocal.m4""
        "--exclude="*config.guess""
        "--exclude="*config.h.in""
        "--exclude="*config.log""
        "--exclude="*config.status""
        "--exclude="*configure""
        "--exclude="*depcomp""
        "--exclude="*install-sh""
        "--exclude="*missing""
    ]
]
Writing request 6 or 0.
======================================
[
    0
    5
    "nvim_get_var"
    [
        "tag_highlight#enabled"
    ]
]
======================================
[
    1
    5
    NIL
    1
]
Writing request 7 or 0.
======================================
[
    0
    6
    "nvim_get_var"
    [
        "tag_highlight#ignore"
    ]
]
======================================
[
    1
    6
    NIL
    [
        "cfg"
        "conf"
        "help"
        "mail"
        "markdown"
        "nerdtree"
        "nofile"
        "qf"
        "text"
        "man"
        "preview"
        "fzf"
    ]
]
Writing request 8 or 0.
======================================
[
    0
    7
    "nvim_get_var"
    [
        "tag_highlight#ignored_tags"
    ]
]
======================================
[
    1
    7
    NIL
    {
        "c"  =>  (
            [
                "xmalloc"
                "xcalloc"
                "xrealloc"
                "xreallocarray"
                "nmalloc"
                "nrealloc"
                "_Bool"
                "static_assert"
                "malloc"
                "calloc"
                "realloc"
                "reallocarray"
                "free"
                "xfree"
                "__attribute__"
                "TRUE"
                "FALSE"
            ]
        )
        "cpp"  =>  (
            [
                "xmalloc"
                "xcalloc"
                "xrealloc"
                "xreallocarray"
                "nmalloc"
                "nrealloc"
                "_Bool"
                "static_assert"
                "malloc"
                "calloc"
                "realloc"
                "reallocarray"
                "free"
                "xfree"
                "__attribute__"
                "TRUE"
                "FALSE"
            ]
        )
    }
]
Writing request 9 or 0.
======================================
[
    0
    8
    "nvim_get_var"
    [
        "tag_highlight#norecurse_dirs"
    ]
]
======================================
[
    1
    8
    NIL
    [
        "/home/bml"
        "/"
        "/include"
        "/usr/include"
        "/usr/share"
        "/usr/local/include"
        "/usr/local/share"
        "/tmp"
        "/usr/src"
        "/usr/ports"
        "/usr/dports"
        "/home/bml/personaldotfiles"
        "/home/bml/random"
        "/home/bml/random/Code"
        "/home/bml/random/school"
        "/home/bml/Downloads"
        "/home/bml/documents"
    ]
]
Writing request 10 or 0.
======================================
[
    0
    9
    "nvim_get_var"
    [
        "tag_highlight#settings_file"
    ]
]
======================================
[
    1
    9
    NIL
    "/home/bml/.vim_tags/tag_highlight.txt"
]
Writing request 11 or 0.
======================================
[
    0
    10
    "nvim_get_var"
    [
        "tag_highlight#use_compression"
    ]
]
======================================
[
    1
    10
    NIL
    1
]
Writing request 12 or 0.
======================================
[
    0
    11
    "nvim_get_var"
    [
        "tag_highlight#verbose"
    ]
]
======================================
[
    1
    11
    NIL
    0
]
Writing request 13 or 0.
======================================
[
    0
    12
    "nvim_get_current_buf"
    []
]
======================================
[
    1
    12
    NIL
    EXT: (0 -> 1)
]
Writing request 14 or 0.
======================================
[
    0
    13
    "nvim_buf_get_option"
    [
        1
        "ft"
    ]
]
======================================
[
    1
    13
    NIL
    "go"
]
Writing request 15 or 0.
======================================
[
    0
    14
    "nvim_buf_get_name"
    [
        1
    ]
]
======================================
[
    1
    14
    NIL
    "/home/bml/.vim/dein/repos/github.com/roflcopter4/tag-highlight.nvim/go/src/tag_highlight/linked_list/list.go"
]
Writing request 16 or 0.
======================================
[
    0
    15
    "nvim_out_write"
    [
        "Initializing new topdir "/home/bml/.vim/dein/repos/github.com/roflcopter4/tag-highlight.nvim/go/src/tag_highlight/linked_list", ft go
"
    ]
]
======================================
[
    1
    15
    NIL
    NIL
]
Writing request 17 or 0.
======================================
[
    0
    16
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    16
    NIL
    "/tmp/nvimmoAR6r/30"
]
Writing request 18 or 0.
======================================
[
    0
    17
    "nvim_get_var"
    [
        "tag_highlight#go#order"
    ]
]
======================================
[
    1
    17
    NIL
    "pftsicmv"
]
Writing request 19 or 0.
======================================
[
    0
    18
    "nvim_get_var"
    [
        "tag_highlight#go#equivalent"
    ]
]
======================================
[
    1
    18
    [
        1
        "Key 'tag_highlight#go#equivalent' not found"
    ]
    NIL
]
Writing request 20 or 0.
======================================
[
    0
    19
    "nvim_call_function"
    [
        "serverstart"
        []
    ]
]
======================================
[
    1
    19
    NIL
    "/tmp/nvimmoAR6r/31"
]
Writing request 20 or 1.
======================================
[
    0
    0
    "nvim_buf_attach"
    [
        1
        true
        []
    ]
]
======================================
[
    2
    "nvim_buf_lines_event"
    [
        EXT: (0 -> 1)
        3
        0
        -1
        [
            "package ll"
            ""
            "import ("
            "	"fmt""
            ")"
            ""
            "type Node struct {"
            "	Data interface{}"
            "	Next *Node"
            "	Prev *Node"
            "}"
            ""
            "type Linked_List struct {"
            "	Head *Node"
            "	Tail *Node"
            "	Qty  int"
            "}"
            ""
            "//========================================================================================"
            ""
            "func Make_New() *Linked_List {"
            "	list := Linked_List{"
            "		Head: nil,"
            "		Tail: nil,"
            "		Qty:  0,"
            "	}"
            "	return &list"
            "}"
            ""
            "func (list *Linked_List) Prepend(data interface{}) {"
            "	var node Node"
            ""
            "	if list.Head != nil {"
            "		list.Head.Prev = &node"
            "	}"
            "	if list.Tail == nil {"
            "		list.Tail = &node"
            "	}"
            ""
            "	node.Data = data"
            "	node.Prev = nil"
            "	node.Next = list.Head"
            "	list.Head = &node"
            ""
            "	list.Qty++"
            "}"
            ""
            "func (list *Linked_List) Append(data interface{}) {"
            "	var node Node"
            ""
            "	if list.Tail != nil {"
            "		list.Tail.Next = &node"
            "	}"
            "	if list.Head == nil {"
            "		list.Head = &node"
            "	}"
            ""
            "	node.Data = data"
            "	node.Prev = list.Tail"
            "	node.Next = nil"
            "	list.Tail = &node"
            ""
            "	list.Qty++"
            "}"
            ""
            "//========================================================================================"
            ""
            "func (list *Linked_List) Insert_After(at *Node, data interface{}) {"
            "	var node Node"
            "	node.Data = data"
            "	node.Prev = at"
            ""
            "	if at != nil {"
            "		node.Next = at.Next"
            "		at.Next = &node"
            "		if node.Next != nil {"
            "			node.Next.Prev = &node"
            "		}"
            "	} else {"
            "		node.Next = nil"
            "	}"
            ""
            "	if list.Head == nil {"
            "		list.Head = &node"
            "	}"
            "	if list.Tail == nil || at == list.Tail {"
            "		list.Tail = &node"
            "	}"
            ""
            "	list.Qty++"
            "}"
            ""
            "func (list *Linked_List) Insert_Before(at *Node, data interface{}) {"
            "	var node Node"
            "	node.Data = data"
            "	node.Next = at"
            ""
            "	if at != nil {"
            "		node.Prev = at.Prev"
            "		at.Prev = &node"
            "		if node.Prev != nil {"
            "			node.Prev.Next = &node"
            "		}"
            "	} else {"
            "		node.Prev = nil"
            "	}"
            ""
            "	if list.Head == nil || at == list.Head {"
            "		list.Head = &node"
            "	}"
            "	if list.Tail == nil {"
            "		list.Tail = &node"
            "	}"
            ""
            "	list.Qty++"
            "}"
            ""
            "//========================================================================================"
            ""
            "func resolve_neg(val, base int) int {"
            "	if val >= 0 {"
            "		return val"
            "	} else {"
            "		return val + base + 1"
            "	}"
            "}"
            ""
            "func panic_fmt(format string, a ...interface{}) {"
            "	s := fmt.Sprintf(format, a...)"
            "	panic(s)"
            "}"
            ""
            "func sanity_check1(start, end int, data []interface{}) {"
            "	if start < 0 || end < 1 || start == end {"
            "		panic_fmt("Illegal start (%d) and end (%d)", start, end)"
            "	}"
            "	if start > end {"
            "		panic_fmt("End (%d) cannot be greater than start (%d)", start, end)"
            "	}"
            "	if data == nil || len(data) == 0 {"
            "		panic("No data supplied")"
            "	}"
            "	if end < len(data) {"
            "		panic_fmt("End (%d) cannot be greater than the length of data (%d)", end, len(data))"
            "	}"
            "}"
            ""
            "func (list *Linked_List) create_nodes(start, end, i int, tmp []*Node, data []interface{}) int {"
            "	for x := (start + 1); x < end; x, i = x+1, i+1 {"
            "		tmp[i] = &Node{}"
            "		tmp[i].Data = data[x]"
            "		tmp[i].Prev = tmp[i-1]"
            "		tmp[i-1].Next = tmp[i]"
            ""
            "		list.Qty++"
            "	}"
            ""
            "	return i"
            "}"
            ""
            "func (list *Linked_List) Insert_Slice_After(at *Node, start, end int, data ...interface{}) {"
            "	start = resolve_neg(start, int(len(data)))"
            "	end = resolve_neg(end, int(len(data)))"
            "	sanity_check1(start, end, data)"
            ""
            "	diff := end - start"
            "	if diff == 1 {"
            "		list.Insert_After(at, data[start])"
            "		return"
            "	}"
            ""
            "	tmp := make([]*Node, diff)"
            "	tmp[0] = &Node{}"
            "	tmp[0].Data = data[start]"
            "	tmp[0].Prev = at"
            "	list.Qty++"
            ""
            "	last := list.create_nodes(start, end, 1, tmp, data) - 1"
            ""
            "	if at != nil {"
            "		tmp[last].Next = at.Next"
            "		at.Next = tmp[0]"
            "		if tmp[last].Next != nil {"
            "			tmp[last].Next.Prev = tmp[last]"
            "		}"
            "	} else {"
            "		tmp[last].Next = nil"
            "	}"
            ""
            "	if list.Head == nil {"
            "		list.Head = tmp[0]"
            "	}"
            "	if list.Tail == nil || at == list.Tail {"
            "		list.Tail = tmp[last]"
            "	}"
            "}"
            ""
            "func (list *Linked_List) Insert_Slice_Before(at *Node, start, end int, data ...interface{}) {"
            "	start = resolve_neg(start, int(len(data)))"
            "	end = resolve_neg(end, int(len(data)))"
            "	sanity_check1(start, end, data)"
            ""
            "	diff := end - start"
            "	if diff == 1 {"
            "		list.Insert_Before(at, data[start])"
            "		return"
            "	}"
            ""
            "	tmp := make([]*Node, diff)"
            "	tmp[0] = &Node{}"
            "	tmp[0].Data = data[start]"
            "	tmp[0].Prev = at"
            "	list.Qty++"
            ""
            "	last := list.create_nodes(start, end, 1, tmp, data) - 1"
            "	tmp[last].Next = at.Next"
            ""
            "	if at != nil {"
            "		tmp[0].Prev = at.Prev"
            "		at.Prev = tmp[last]"
            "		if tmp[0].Prev != nil {"
            "			tmp[last].Prev.Next = tmp[0]"
            "		}"
            "	} else {"
            "		tmp[0].Prev = nil"
            "	}"
            ""
            "	if list.Head == nil || at == list.Head {"
            "		list.Head = tmp[0]"
            "	}"
            "	if list.Tail == nil {"
            "		list.Tail = tmp[last]"
            "	}"
            "}"
            ""
            "//========================================================================================"
            ""
            "func (list *Linked_List) Delete_Node(node *Node) {"
            "	if list.Qty == 1 {"
            "		list.Head, list.Tail = nil, nil"
            "	} else if node == list.Head {"
            "		list.Head = node.Next"
            "		list.Head.Prev = nil"
            "	} else if node == list.Tail {"
            "		list.Tail = node.Prev"
            "		list.Tail.Next = nil"
            "	} else {"
            "		node.Prev.Next = node.Next"
            "		node.Next.Prev = node.Prev"
            "	}"
            ""
            "	list.Qty--"
            "}"
            ""
            "func (list *Linked_List) Delete_Range(at *Node, rng int) {"
            "	eprintf("Deleting range %d\n", rng)"
            "	if list.Qty < rng {"
            "		panic_fmt("Delete range (%d) cannot be larger than the list's size (%d)", rng, list.Qty)"
            "	}"
            ""
            "	if rng == 0 {"
            "		return"
            "	}"
            "	/* if rng == 1 {"
            "		list.Delete_Node(at)"
            "	} */"
            ""
            "	var ("
            "		/* start        *Node = at.Prev"
            "		end          *Node = nil */"
            "		last         *Node = nil"
            "		current      *Node = at"
            "		next         *Node = nil"
            "		prev         *Node = nil"
            "		replace_head bool  = (at == list.Head || list.Head == nil)"
            "	)"
            ""
            "	if at != nil {"
            "		prev = at.Prev"
            "	}"
            ""
            "	for i := 0; i < rng && current != nil; i++ {"
            "		/* next = current.Next"
            "		current = next */"
            "		last = current"
            "		current = current.Next"
            "		// list.Qty--"
            "	}"
            "	next = current"
            ""
            "	if list.Qty < 0 {"
            "		list.Qty = 0"
            "	}"
            ""
            "	if replace_head {"
            "		list.Head = next"
            "	}"
            "	if prev != nil {"
            "		prev.Next = next"
            "	}"
            "	if next != nil {"
            "		next.Prev = prev"
            "	} else {"
            "		last.Prev = prev"
            "		list.Tail = prev"
            "	}"
            ""
            "	eprintf("qty is %d\n", list.Qty)"
            "	list.Qty -= rng"
            "	eprintf("qty is %d\n", list.Qty)"
            "}"
            ""
            "//========================================================================================"
            ""
            "/*"
            " * These were all macros in the original C code, but they should be inlined in"
            " * pretty much every instance anyway."
            " */"
            "func (list *Linked_List) Insert_Before_At(index int, data interface{}) {"
            "	list.Insert_Before(list.At(index), data)"
            "}"
            ""
            "func (list *Linked_List) Insert_After_At(index int, data interface{}) {"
            "	list.Insert_After(list.At(index), data)"
            "}"
            ""
            "func (list *Linked_List) Insert_Slice_Before_At(index int, start, end int, data ...interface{}) {"
            "	list.Insert_Slice_Before(list.At(index), start, end, data...)"
            "}"
            ""
            "func (list *Linked_List) Insert_Slice_After_At(index int, start, end int, data ...interface{}) {"
            "	list.Insert_Slice_After(list.At(index), start, end, data...)"
            "}"
            ""
            "func (list *Linked_List) Delete_Node_At(index int) {"
            "	list.Delete_Node(list.At(index))"
            "}"
            ""
            "func (list *Linked_List) Delete_Range_At(index, rng int) {"
            "	list.Delete_Range(list.At(index), rng)"
            "}"
            ""
            "//========================================================================================"
            ""
            "func (list *Linked_List) At(index int) *Node {"
            "	if list == nil || list.Qty == 0 || list.Head == nil || list.Tail == nil {"
            "		return nil"
            "	}"
            "	if index == 0 {"
            "		return list.Head"
            "	}"
            "	if index == (-1) || index == list.Qty {"
            "		return list.Tail"
            "	}"
            ""
            "	index = resolve_neg(index, list.Qty)"
            "	if index < 0 || index > list.Qty {"
            "		eprintf("Warning: Cannot find node at index %d (list qty: %d)\n","
            "			index, list.Qty)"
            "	}"
            ""
            "	var ("
            "		current *Node = nil"
            "		x       int"
            "	)"
            ""
            "	if index < ((list.Qty - 1) / 2) {"
            "		current = list.Head"
            "		for x = 0; current != nil && x != index; x++ {"
            "			eprintf("x: %d -> %v\n", x, current.Data)"
            "			current = current.Next"
            "		}"
            "	} else {"
            "		current = list.Tail"
            "		for x = (list.Qty - 1); current != nil && x != index; x-- {"
            "			eprintf("x: %d -> %v\n", x, current.Data)"
            "			current = current.Prev"
            "		}"
            "	}"
            "	if x != index {"
            "		panic_fmt("Couldn't find node at index %d", index)"
            "	}"
            ""
            "	return current"
            "}"
            ""
            "func (list *Linked_List) Replace_At(index int, data interface{}) {"
            "	node := list.At(index)"
            "	if node == nil {"
            "		panic("Node out of range!")"
            "	}"
            ""
            "	node.Data = data"
            "}"
            ""
            "func (list *Linked_List) Verify_Size() bool {"
            "	i := 0"
            "	for node := list.Head; node != nil; i++ {"
            "		node = node.Next"
            "	}"
            "	ret := i == list.Qty"
            "	if !ret {"
            "		eprintf("Size %d is not correct (%d)\n", list.Qty, i)"
            "		list.Qty = i"
            "	}"
            "	return ret"
            "}"
        ]
        false
    ]
]
======================================
[
    1
    0
    NIL
    true
]
Writing request 21 or 1.
======================================
[
    0
    20
    "nvim_out_write"
    [
        "Writing, cur size is 1
"
    ]
]
======================================
[
    1
    20
    NIL
    NIL
]
Writing request 22 or 1.
======================================
[
    0
    21
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    21
    NIL
    "/tmp/nvimmoAR6r/32"
]
Writing request 23 or 1.
======================================
[
    0
    22
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/32.
"
    ]
]
======================================
[
    1
    22
    NIL
    NIL
]
Writing request 24 or 1.
======================================
[
    0
    23
    "nvim_out_write"
    [
        "Writing, cur size is 407
"
    ]
]
======================================
[
    1
    23
    NIL
    NIL
]
Writing request 25 or 1.
======================================
[
    0
    24
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    24
    NIL
    "/tmp/nvimmoAR6r/33"
]
Writing request 26 or 1.
======================================
[
    0
    25
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/33.
"
    ]
]
======================================
[
    1
    25
    NIL
    NIL
]
Writing request 27 or 1.
======================================
[
    0
    26
    "nvim_buf_get_changedtick"
    [
        1
    ]
]
======================================
[
    1
    26
    NIL
    3
]
Writing request 28 or 1.
======================================
[
    0
    27
    "nvim_buf_line_count"
    [
        1
    ]
]
======================================
[
    1
    27
    NIL
    407
]
======================================
[
    2
    "nvim_buf_lines_event"
    [
        EXT: (0 -> 1)
        4
        263
        264
        []
        false
    ]
]
Writing request 29 or 1.
======================================
[
    0
    28
    "nvim_out_write"
    [
        "Writing, cur size is 407
"
    ]
]
======================================
[
    1
    28
    NIL
    NIL
]
Writing request 30 or 1.
======================================
[
    0
    29
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    29
    NIL
    "/tmp/nvimmoAR6r/36"
]
Writing request 31 or 1.
======================================
[
    0
    30
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/36.
"
    ]
]
======================================
[
    1
    30
    NIL
    NIL
]
Writing request 32 or 1.
======================================
[
    0
    31
    "nvim_out_write"
    [
        "Deleting starting at 263, 1 lines
"
    ]
]
======================================
[
    1
    31
    NIL
    NIL
]
Writing request 33 or 1.
======================================
[
    0
    32
    "nvim_out_write"
    [
        "Writing, cur size is 406
"
    ]
]
======================================
[
    1
    32
    NIL
    NIL
]
Writing request 34 or 1.
======================================
[
    0
    33
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    33
    NIL
    "/tmp/nvimmoAR6r/37"
]
Writing request 35 or 1.
======================================
[
    0
    34
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/37.
"
    ]
]
======================================
[
    1
    34
    NIL
    NIL
]
Writing request 36 or 1.
======================================
[
    0
    35
    "nvim_buf_get_changedtick"
    [
        1
    ]
]
======================================
[
    1
    35
    NIL
    4
]
Writing request 37 or 1.
======================================
[
    0
    36
    "nvim_buf_line_count"
    [
        1
    ]
]
======================================
[
    1
    36
    NIL
    406
]
======================================
[
    2
    "nvim_buf_lines_event"
    [
        EXT: (0 -> 1)
        5
        263
        263
        [
            "	/* if rng == 1 {"
        ]
        false
    ]
]
Writing request 38 or 1.
======================================
[
    0
    37
    "nvim_out_write"
    [
        "Writing, cur size is 406
"
    ]
]
======================================
[
    1
    37
    NIL
    NIL
]
Writing request 39 or 1.
======================================
[
    0
    38
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    38
    NIL
    "/tmp/nvimmoAR6r/39"
]
Writing request 40 or 1.
======================================
[
    0
    39
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/39.
"
    ]
]
======================================
[
    1
    39
    NIL
    NIL
]
Writing request 41 or 1.
======================================
[
    0
    40
    "nvim_out_write"
    [
        "Writing, cur size is 407
"
    ]
]
======================================
[
    1
    40
    NIL
    NIL
]
Writing request 42 or 1.
======================================
[
    0
    41
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    41
    NIL
    "/tmp/nvimmoAR6r/40"
]
Writing request 43 or 1.
======================================
[
    0
    42
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/40.
"
    ]
]
======================================
[
    1
    42
    NIL
    NIL
]
Writing request 44 or 1.
======================================
[
    0
    43
    "nvim_buf_get_changedtick"
    [
        1
    ]
]
======================================
[
    1
    43
    NIL
    6
]
======================================
[
    2
    "nvim_buf_changedtick_event"
    [
        EXT: (0 -> 1)
        6
    ]
]
======================================
[
    2
    "nvim_buf_lines_event"
    [
        EXT: (0 -> 1)
        7
        263
        266
        []
        false
    ]
]
Writing request 45 or 1.
======================================
[
    0
    44
    "nvim_out_write"
    [
        "Writing, cur size is 407
"
    ]
]
======================================
[
    1
    44
    NIL
    NIL
]
Writing request 46 or 1.
======================================
[
    0
    45
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    45
    NIL
    "/tmp/nvimmoAR6r/42"
]
Writing request 47 or 1.
======================================
[
    0
    46
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/42.
"
    ]
]
======================================
[
    1
    46
    NIL
    NIL
]
Writing request 48 or 1.
======================================
[
    0
    47
    "nvim_out_write"
    [
        "Deleting starting at 263, 3 lines
"
    ]
]
======================================
[
    1
    47
    NIL
    NIL
]
Writing request 49 or 1.
======================================
[
    0
    48
    "nvim_out_write"
    [
        "Writing, cur size is 404
"
    ]
]
======================================
[
    1
    48
    NIL
    NIL
]
Writing request 50 or 1.
======================================
[
    0
    49
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    49
    NIL
    "/tmp/nvimmoAR6r/43"
]
Writing request 51 or 1.
======================================
[
    0
    50
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/43.
"
    ]
]
======================================
[
    1
    50
    NIL
    NIL
]
Writing request 52 or 1.
======================================
[
    0
    51
    "nvim_buf_get_changedtick"
    [
        1
    ]
]
======================================
[
    1
    51
    NIL
    7
]
Writing request 53 or 1.
======================================
[
    0
    52
    "nvim_buf_line_count"
    [
        1
    ]
]
======================================
[
    1
    52
    NIL
    404
]
======================================
[
    2
    "nvim_buf_lines_event"
    [
        EXT: (0 -> 1)
        8
        263
        263
        [
            "	/* if rng == 1 {"
            "		list.Delete_Node(at)"
            "	} */"
        ]
        false
    ]
]
Writing request 54 or 1.
======================================
[
    0
    53
    "nvim_out_write"
    [
        "Writing, cur size is 404
"
    ]
]
======================================
[
    1
    53
    NIL
    NIL
]
Writing request 55 or 1.
======================================
[
    0
    54
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    54
    NIL
    "/tmp/nvimmoAR6r/45"
]
Writing request 56 or 1.
======================================
[
    0
    55
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/45.
"
    ]
]
======================================
[
    1
    55
    NIL
    NIL
]
Writing request 57 or 1.
======================================
[
    0
    56
    "nvim_out_write"
    [
        "Writing, cur size is 410
"
    ]
]
======================================
[
    1
    56
    NIL
    NIL
]
Writing request 58 or 1.
======================================
[
    0
    57
    "nvim_call_function"
    [
        "tempname"
        []
    ]
]
======================================
[
    1
    57
    NIL
    "/tmp/nvimmoAR6r/46"
]
Writing request 59 or 1.
======================================
[
    0
    58
    "nvim_out_write"
    [
        "Done writing file - /tmp/nvimmoAR6r/46.
"
    ]
]
======================================
[
    1
    58
    NIL
    NIL
]
